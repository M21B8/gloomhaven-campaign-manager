local EventManager = require('ge_tts.EventManager')

local Savefile = require("gloomhaven-campaign-manager.Savefile")
local Cleanup = require('gloomhaven-campaign-manager.Cleanup')
local Game = require('gloomhaven-campaign-manager.Game')
local Achievement = require('gloomhaven-campaign-manager.Achievement')
local Enhancement = require('gloomhaven-campaign-manager.Enhancement')
local Event = require('gloomhaven-campaign-manager.Event')
local EventType = require('gloomhaven-campaign-manager.EventType')
local Party = require('gloomhaven-campaign-manager.Party')
local Preparation = require('gloomhaven-campaign-manager.Preparation')
local Prosperity = require('gloomhaven-campaign-manager.Prosperity')
local Retirement = require('gloomhaven-campaign-manager.Retirement')
local Scenario = require('gloomhaven-campaign-manager.Scenario')
local Shop = require('gloomhaven-campaign-manager.Shop')
local Unlocked = require('gloomhaven-campaign-manager.Unlocked')

-- 2163619993
local CampaignManager = {}

---@type number[]
CampaignManager.VERSION = { 1, 3, 2 }

function CampaignManager.loadAll()
    local content = Savefile.load()
    if content then
        Preparation.start(function() CampaignManager.doLoadAll(--[[---@type gh_Savefile]] content) end)
    end
end

---@param content gh_Savefile
function CampaignManager.doLoadAll(content)
    CampaignManager.setupEventHandlers(content)

    Scenario.loadAll(content.global.scenarios)
    Achievement.loadAll(content.global.achievements)
    Prosperity.load(content.global.prosperity)
    Unlocked.loadAll(content.unlocked)
    Party.load(content.party)
    Retirement.load(content.retired)
    Event.loadAll(content.events)
    Shop.load()
end

---@param content gh_Savefile
function CampaignManager.setupEventHandlers(content)
    EventManager.addHandler(EventType.Load.Shop, function() Unlocked.loadItems(content) end)
    EventManager.addHandler(EventType.Load.Items, function()
        for name, _ in pairs(Game.CLASSES) do
            EventManager.triggerEvent(EventType.Load.Class.Start, name)
        end
    end)
    EventManager.addHandler(EventType.Load.Class.Start, function(className) Unlocked.mayLoadClass(content, className) end)
    EventManager.addHandler(EventType.Load.Class.Unlocked, function(className) Enhancement.mayLoadForClass(content, className) end)
    EventManager.addHandler(EventType.Load.Class.Enhanced, function(className) Party.mayLoadCharacter(content, className) end)
    EventManager.addHandler(EventType.Load.Class.Unlocked, Cleanup.onClassUnlocked)
    EventManager.addHandler(EventType.Load.Treasure, Cleanup.onTreasureLoaded)
end

function CampaignManager.saveAll()
    EventManager.addHandler(EventType.Save.Achievements, function(saveFile) Savefile.save(saveFile) end)

    CampaignManager.createSaveFile()
end

function CampaignManager.createSaveFile()
    local saveFile = Savefile.create()

    Preparation.prepareSave()
    -- this wait is necessary, because the scripting zones have to be adjusted, otherwise they won't detect cards lying
    -- directly on the table
    Wait.time(function() CampaignManager.doCreateSaveFile(saveFile) end, 1)
end

---@param saveFile gh_Savefile
function CampaignManager.doCreateSaveFile(saveFile)
    Prosperity.saveAll(saveFile)
    Scenario.saveAll(saveFile)
    Achievement.saveAll(saveFile)
    Unlocked.saveAll(saveFile)
    Party.saveAll(saveFile)
    Enhancement.saveAll(saveFile)
    Retirement.saveAll(saveFile)
    Event.saveAll(saveFile)
end

return CampaignManager

local EventManager = require('ge_tts.EventManager')
local Logger = require("sebaestschjin-tts.module.Logger")
local Utils = require("sebaestschjin-tts.src.Utils")

local Cleanup = require('gloomhaven-campaign-manager.module.Cleanup')
local Game = require('gloomhaven-campaign-manager.module.Game')
local Achievement = require("gloomhaven-campaign-manager.module.Achievement")
local Enhancement = require("gloomhaven-campaign-manager.module.Enhancement")
local Event = require("gloomhaven-campaign-manager.module.Event")
local Party = require("gloomhaven-campaign-manager.module.Party")
local Preparation = require("gloomhaven-campaign-manager.module.Preparation")
local Prosperity = require("gloomhaven-campaign-manager.module.Prosperity")
local Retirement = require("gloomhaven-campaign-manager.module.Retirement")
local Scenario = require("gloomhaven-campaign-manager.module.Scenario")
local Unlocked = require("gloomhaven-campaign-manager.module.Unlocked")

-- 2163619993
local CampaignManager = {}

CampaignManager.VERSION = { 1, 3, 0 }
CampaignManager.SAVE_FILE = "Savefile"

function CampaignManager.loadAll()
    local saveFile = Utils.readNotebook(CampaignManager.SAVE_FILE)
    if not saveFile or #saveFile == 0 then
        Logger.error("No notebook found containing the save file!"
                .. " Please add a notebook named %s.", CampaignManager.SAVE_FILE)
        return
    end

    local status, content = pcall(function() return JSON.decode(--[[---@not nil]] saveFile) end)
    if not status then
        Logger.error("The provided save file contains errors."
                .. " The error message from Lua is also very cryptic and doesn't really help. :-("
                .. " Make sure your save file is a valid JSON file and try again."
                .. "\n" .. content)
        return
    end

    Preparation.start(function() CampaignManager.doLoadAll(content) end)
end

---@param content gh_Savefile
function CampaignManager.doLoadAll(content)
    CampaignManager.setupEventHandlers(content)

    for name, _ in pairs(Game.CLASSES) do
        EventManager.triggerEvent('class_ready', name)
    end
    if content.global then
        Scenario.loadAll(content.global.scenarios)
        Achievement.loadAll(content.global.achievements)
        Prosperity.load(content.global.prosperity)
    end
    --Unlocked.loadAll(content.unlocked)
    Party.load(content.party)
    --Retirement.load(content.retired)
    --Shop.load()
    --Event.loadAll(content.events)
    --Enhancement.loadAll(content.enhancements)
end

---@param content gh_Savefile
function CampaignManager.setupEventHandlers(content)
    EventManager.addHandler('class_ready', function(className) Enhancement.mayLoadForClass(content, className) end)
    EventManager.addHandler('class_enhanced', function(className) Unlocked.mayLoadClass(content, className) end)
    EventManager.addHandler('class_unlocked', function(className) Party.mayLoadCharacter(content, className) end)
    EventManager.addHandler('class_unlocked', Cleanup.onClassUnlocked)
end

function CampaignManager.saveAll()
    local saveFile = CampaignManager.createSaveFile()

    Wait.time(function()
        local content = JSON.encode_pretty(saveFile)
        content = content .. "\n" -- to conform to POSIX :-)
        Notes.addNotebookTab({ title = "New Savefile", body = content })
    end, 3)
end

function CampaignManager.createSaveFile()
    local saveFile = {}

    Preparation.prepareSave()
    -- TODO change to task based, this wait is necessary, because the scripting zones have to be
    -- adjusted, otherwise they won't detect cards lying on the table
    Wait.time(function() CampaignManager.doCreateSaveFile(saveFile) end, 1)

    return saveFile
end

function CampaignManager.doCreateSaveFile(saveFile)
    saveFile.global = {
        prosperity = Prosperity.save(),
        scenarios = Scenario.save(),
    }
    Achievement.saveAll(saveFile.global)
    Unlocked.saveAll(saveFile)
    saveFile.party = Party.save()
    saveFile.enhancements = Enhancement.save()
    saveFile.retired = Retirement.save()
    saveFile.events = Event.save()
end

return CampaignManager

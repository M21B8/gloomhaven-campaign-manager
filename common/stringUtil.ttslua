StringUtil = {}


function StringUtil.split(text, seperators)
  if not text then
    return {}
  end
  if TableUtil.isEmpty(seperators) then
    return {text}
  end

  local parts = {}
  local seperatorExpression = "[^" .. table.concat(seperators, "") .. "]+"
  for part in string.gmatch(text, seperatorExpression) do
    table.insert(parts, part)
  end
  return parts
end


function StringUtil.escapePattern(text)
  return text:gsub("([-+()%[%]])", "%%%1")
end

function StringUtil.bytes(text)
  local bytes = {}

  for i=1, #text do
    table.insert(bytes, text:byte(i))
  end

  return bytes
end

function StringUtil.chars(bytes)
  local text = ""

  for _, byte in pairs(bytes) do
    text = text .. string.char(byte)
  end

  return text
end

function StringUtil.isBase64(text)
  return text:gmatch("^[a-zA-Z0-9+/]+=?=?$")
end

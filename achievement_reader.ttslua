self_achievements = {}

map_script = nil


function read_achievements(achievements)
  print("Reading Achievements")
  setup()

  self_achievements = achievements

  startLuaCoroutine(self, "__read_achievements_coroutine")
end


function setup()
  map_script = getObjectFromGUID("9cc037")
end


function __read_achievements_coroutine()
  for _, achievement in pairs(self_achievements) do
    local board = __get_achievement_board()
    local index = __find_achievement_index(board, achievement)
    __read_achievement(index, achievement)
  end

  return 1
end


function __read_achievement(index, achievement)
  local count = 1
  if achievement.count then
    count = achievement.count
  end

  for i=1, count do
    local board = __get_achievement_board()
    board.call("clicked", index)
    __wait_frames(30)
  end
end


function __get_achievement_board()
  local board = getObjectFromGUID("43d5b8")
  if not board then
    map_script.call("addAchiev", {})
    __wait_frames(120)
    return getObjectFromGUID("43d5b8")
  end

  return board
end


function __find_achievement_index(board, achievement)
  local achievement_info = board.getTable("flags")

  for i, flag in pairs(achievement_info) do
    if flag.name == achievement.name then
      -- TODO check if count is actually available
      return i
    end
  end
end


function __wait_frames(count)
  for i=1, count do
    coroutine.yield(0)
  end
end

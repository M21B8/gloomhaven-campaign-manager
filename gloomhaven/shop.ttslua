Shop = {}


function Shop.load()
  local cityMat = getObjectFromGUID(guids.CITY_MAT)

  for i=1, Prosperity.getLevel() do
    cityMat.call("layOut", i)
  end
  cityMat.call("layOut", 0)
end


function Shop.save()
  local cityMat = getObjectFromGUID(guids.CITY_MAT)
  local shopPosition = Utils.getSnapPosition(cityMat, snaps.SHOP)
  local shopDeck = cityMat.call('checkForDeck', shopPosition)
  if not shopDeck then
    Log.warning("Can't find shop deck, which means unlocked items can't be saved."
                .." If the shop is currently layed out, please recall it and try again.")
    return {}
  end

  local items = {}
  for _, item in pairs(shopDeck.getObjects()) do
    if Component.isRewardItemCard(item) then
      items[item.name] = true
    end
  end

  return TableUtil.setToList(items)
end


function Shop.findItem(name)
  local cityMat = getObjectFromGUID(guids.CITY_MAT)
  for i=1, 14 do
    local pos = Utils.getSnapPosition(cityMat, i)
    local deck = cityMat.call('checkForDeck', pos)
    if deck then
      local item = Utils.findObjectInfoInStack(deck, {name=name, plain=true})
      if item then
        return item
      end
    end
  end
end


function Shop.takeItem(name, position, rotation)
  local cityMat = getObjectFromGUID(guids.CITY_MAT)
  for i=1, 14 do
    local pos = Utils.getSnapPosition(cityMat, i)
    local deck = cityMat.call('checkForDeck', pos)
    if deck then
      local item = Utils.findObjectInfoInStack(deck, {name=name, plain=true})
      if item then
        deck.takeObject({
          guid = item.guid,
          smooth = false,
          position = position,
          rotation = rotation,
        })
        return
      end
    end
  end
end

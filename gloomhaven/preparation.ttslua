Preparation = {}

function Preparation.start(callback)
  Preparation.verify()
  Preparation.fix(callback)
  getObjectFromGUID(guids.GAMEBOX).takeObject({
    guid = guids.SCENARIO_BOOK,
    smooth = false,
    position = positions.SCENARIO_BOOK,
    rotation = Rotation.NORTH
  })
  getObjectFromGUID(guids.GAMEBOX).takeObject({
    guid = guids.RULE_BOOK,
    smooth = false,
    position = positions.RULE_BOOK,
    rotation = Rotation.NORTH
  })
end

-- Verifies that the script can actually run, by checking if needed objects exists.
function Preparation.verify()
  assert(getObjectFromGUID(guids.MAP), "Map object is missing")
  assert(getObjectFromGUID(guids.MAP).getTable("tableML"), "Scenario information missing")
  assert(getObjectFromGUID(guids.MAP).getTable("Pros"), "Prosperity information missing")
  assert(getObjectFromGUID(guids.GAMEBOX), "Gamebox is missing")
end

function Preparation.fix(callback)
  Preparation.fixAbility("Brute", "Devasttating Hack", "Devastating Hack")

  Preparation.revealLockedCharacters(callback)
end

function Preparation.fixAbility(class, name, realName)
  Game.CLASSES[class].abilities[name] = Game.CLASSES[class].abilities[realName]
end

function Preparation.revealLockedCharacters(callback)
  getObjectFromGUID(guids.GAMEBOX).takeObject({
    guid = guids.LOCKED_CLASSES,
    smooth = false,
    callback_function = function(obj)
      Preparation.putDivinierIntoBox(obj)
      Preparation.revealOpeningConditions(callback) end
  })
end


function Preparation.putDivinierIntoBox(classes)
  getObjectFromGUID(guids.FORGOTTEN_CIRCLES_BOX).takeObject({
    guid = Game.CLASSES.Diviner.boxGuid,
    smooth = false,
    callback_function = function(obj) classes.putObject(obj) end
  })
end


function Preparation.revealOpeningConditions(callback)
  getObjectFromGUID(guids.GAMEBOX).takeObject({
    guid = guids.OPENING_CONDITIONS,
    smooth = false,
    position = positions.OPENING_CONDITIONS,
    rotation = Rotation.NORTH,
    callback_function = function() Preparation.revealRetirementSheet(callback) end
  })
end


function Preparation.revealRetirementSheet(callback)
  getObjectFromGUID(guids.GAMEBOX).takeObject({
    guid = guids.RETIREMENT_SHEET,
    smooth = false,
    position = positions.RETIREMENT_SHEET,
    rotation = Rotation.NORTH,
    callback_function = function() Preparation.finish(callback) end
  })
end


function Preparation.finish(callback)
    callback()
end


function Preparation.prepareSave()
  for _, zoneGuid in pairs(guids.ZONES) do
    local zone = getObjectFromGUID(zoneGuid)
    local zonePosition = zone.getPosition()
    zonePosition:setAt("y", 4.22)
    zone.setPosition(zonePosition)
  end
end

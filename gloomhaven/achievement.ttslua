Achievement = {}

function Achievement.loadAll(content)
  print("Reading Achievements")
  groupReady = {true}

  for i=1,5 do
    groupReady[i+1] = false
    local achievementGroup = {}
    for _, achievement in pairs(content) do
      if achievement.count >= i then
        table.insert(achievementGroup, achievement.name)
      end
    end

    if next(achievementGroup) != nil then
      Wait.condition(function() Achievement.loadGroup(i, achievementGroup) end, function() return groupReady[i] end)
    end
  end
end

function Achievement.loadGroup(i, achievementGroup)
  globalAchievementsBag = getObjectFromGUID(guids.ACHIEVEMENTS_BAG)

  globalAchievementsBag.takeObject({
    guid=guids.ACHIEVEMENT_BOARD,
    callback_function = function(obj)
      for _, achievement in pairs(achievementGroup) do
          local index = Achievement.findIndex(obj, achievement)
        obj.call('clicked', index)
      end
      groupReady[i+1] = true end
  })
end


function Achievement.saveAll(saveFile)
  getObjectFromGUID(guids.ACHIEVEMENTS_BAG).takeObject({
    guid = guids.ACHIEVEMENT_BOARD,
    position = positions.ACHIEVEMENT_BOARD,
    rotation = Rotation.NORTH,
    callback_function = function(obj) Achievement.doSave(saveFile, obj) end
  })
end


function Achievement.doSave(saveFile, achievementBoard)
  local achievementInfo = achievementBoard.getTable("flags")

  local result = {}
  for _, achievement in pairs(achievementInfo) do
    local maxIndex = 0
    for i, guid in pairs(achievement.guids) do
      if getObjectFromGUID(guid) ~= nil then
        maxIndex = i
      end
    end
    if maxIndex > 0 then
      table.insert(result, {name=achievement.name, count=maxIndex})
    end
  end
  saveFile.achievements = result
end


function Achievement.findIndex(board, achievement)
  local achievementInfo = board.getTable("flags")

  for i, flag in pairs(achievementInfo) do
    if flag.name == achievement then
      return i
    end
  end
  return nil
end

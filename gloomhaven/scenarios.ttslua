Scenario = {}

Scenario.OPEN = "Open"
Scenario.DONE = "Done"
Scenario.LOCKED = "Locked"

function Scenario.loadAll(content)
  local scenarioStickers = getObjectFromGUID(guids.MAP).getTable("tableML")

  for number, state in pairs(content) do
    local stickerGuid = Scenario.findStickerGuid(scenarioStickers, tonumber(number))
    Wait.time(function() Scenario.placeSticker(stickerGuid, state) end, 1.1, 1)
  end
end


function Scenario.save()
  local content = {}
  local map = getObjectFromGUID(guids.MAP)
  local scenarioStickers = map.getTable("tableML")
  local unlockedScenarios = map.getTable("locations")

  for stickerGuid, info in pairs(scenarioStickers) do
    if getObjectFromGUID(stickerGuid) ~= nil and info.number ~= nil then
      state = Scenario.OPEN
      if unlockedScenarios[stickerGuid] then
        if unlockedScenarios[stickerGuid][1] == 1 then
          state = Scenario.LOCKED
        else
          state = Scenario.DONE
        end
      end
      content[tostring(info.number)] = state
    end
  end

  return content
end


function Scenario.findStickerGuid(scenarioStickers, number)
  for stickerGuid, info in pairs(scenarioStickers) do
    if info.number == number then
      return stickerGuid
    end
  end
  return nil
end


function Scenario.placeSticker(stickerGuid, state)
  local map = getObjectFromGUID(guids.MAP)
  if state == Scenario.OPEN then
    map.call("clickedML", stickerGuid)
  elseif state == Scenario.DONE then
    map.call("clickedML", stickerGuid)
    map.call("oneClick", { stickerGuid })
  elseif state == Scenario.LOCKED then
    map.call("clickedML", stickerGuid)
    map.call("triClick", { stickerGuid })
  else
    print("Unknown state: " .. tostring(state))
  end
end
